syntax = "proto3";
package sum;
option go_package="./sum/sumpb";
message Sum {
    int32 first_num = 1;
    int32 second_num = 2;
}
message PrimeNumber {
    int64 num = 1;
}
message SumRequest {
    Sum total = 1;
}

message SumResponse {
    int32 result = 1;
}

message PrimeNumberManyTimesRequest {
    PrimeNumber prime_number = 1;
}

message PrimeNumberManyTimesResponse {
    int64 result = 1;
}

message ComputeAverageRequest{
    int32 num = 1;
}
message ComputeAverageResponse {
    double result = 1;
}
message FindMaximumRequest{
    int32 num =1;
}
message FindMaximumResponse{
    int32 maximum = 1;
}
service SumService {
    // Unary
    rpc Sum(SumRequest) returns (SumResponse){};
    // Server Streaming 
    rpc PrimeNumberManyTimes(PrimeNumberManyTimesRequest) returns (stream PrimeNumberManyTimesResponse){}
    // Client Streaming
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){}

    // BiDi Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {}
}